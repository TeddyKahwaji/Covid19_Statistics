{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.js","api/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","dead","url","fetchData","country","a","changeableUrl","fetch","then","info","json","console","error","fetchDailyData","axios","get","temp","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","fetchMyApi","lineChart","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","response","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.461ec189.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__ZsW49\",\"card\":\"Cards_card__2ZsIx\",\"infected\":\"Cards_infected__1TtzX\",\"recovered\":\"Cards_recovered__2czkD\",\"dead\":\"Cards_dead__3rJAJ\"};","import React from \"react\";\r\nimport styles from \"./Cards.module.css\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\nexport default function Cards({\r\n  data: { confirmed, recovered, deaths, lastUpdate },\r\n}) {\r\n  if (!confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of recoveries of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.dead)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of deaths caused by COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n  try {\r\n    const { confirmed, recovered, deaths, lastUpdate } = await fetch(\r\n      changeableUrl\r\n    ).then((info) => info.json());\r\n    return {\r\n      confirmed,\r\n      recovered,\r\n      deaths,\r\n      lastUpdate,\r\n    };\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await await axios.get(`${url}/daily`);\r\n    const temp = data.map(({ confirmed, deaths, reportDate: date }) => ({\r\n      confirmed: confirmed.total,\r\n      deaths: deaths.total,\r\n      date,\r\n    }));\r\n    return temp;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n  useEffect(() => {\r\n    const fetchMyApi = async () => {\r\n      const data = await fetchDailyData();\r\n      setDailyData(data);\r\n    };\r\n    fetchMyApi();\r\n  }, []);\r\n\r\n  const lineChart = dailyData[0] ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgbaa(255, 0, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0,0,255,0.5)\",\r\n              \"rgba(0,255,0,0.5)\",\r\n              \"rgba(255,0,0,0.5)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n  );\r\n};\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport { fetchCountries } from \"../../api\";\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nexport default function CountryPicker({ handleCountryChange }) {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n  useEffect(() => {\r\n    const response = async () => setFetchedCountries(await fetchCountries());\r\n    response();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => handleCountryChange(e.target.value)}\r\n      >\r\n        <option value=\"\">Global</option>\r\n        {fetchedCountries.map((country, i) => (\r\n          <option key={i} value={country}>\r\n            {country === \"US\" ? \"United States\" : country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n}\r\n","import styles from \"./App.module.css\";\nimport { Cards, Chart, CountryPicker } from \"./components\";\nimport React, { Component } from \"react\";\nimport { fetchData } from \"./api\";\nexport default class App extends Component {\n  state = {\n    data: {},\n    country: \"\",\n  };\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData });\n  }\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n    this.setState({ data: fetchedData, country });\n  };\n\n  render() {\n    const { data, country } = this.state;\n    return (\n      <div className={styles.container}>\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__jpzAR\",\"image\":\"App_image__1qZpK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3Hlef\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1YlEl\"};"],"sourceRoot":""}